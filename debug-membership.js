/**
 * Script para verificar membres√≠as de usuario en el estudio
 * Este script debe ejecutarse desde las Developer Tools del navegador
 */

(async function checkUserMembership() {
    try {
        // Obtener el usuario actual
        const user = firebase.auth().currentUser;
        if (!user) {
            console.log('‚ùå No hay usuario autenticado');
            return;
        }

        const userId = user.uid;
        const studioId = 'Xz0t6mSMxHZcARXQ0Bvl'; // Tu studio ID

        console.log(`üîç Verificando membres√≠as para usuario: ${userId}`);
        console.log(`üè¢ Studio ID: ${studioId}`);

        // 1. Verificar token claims
        const tokenResult = await user.getIdTokenResult();
        console.log('üé´ Token claims:', tokenResult.claims);

        // 2. Verificar membres√≠a legacy
        const legacyMembershipId = `${userId}_${studioId}`;
        const legacyMemberRef = firebase.firestore().doc(`studio_members/${legacyMembershipId}`);
        const legacyMemberDoc = await legacyMemberRef.get();
        
        console.log(`üë• Legacy membership (${legacyMembershipId}):`);
        if (legacyMemberDoc.exists) {
            console.log('‚úÖ EXISTS:', legacyMemberDoc.data());
        } else {
            console.log('‚ùå NOT FOUND');
        }

        // 3. Verificar membres√≠a nueva (staff)
        const staffRef = firebase.firestore().doc(`studios/${studioId}/staff/${userId}`);
        const staffDoc = await staffRef.get();
        
        console.log(`üë§ Staff membership:`);
        if (staffDoc.exists) {
            console.log('‚úÖ EXISTS:', staffDoc.data());
        } else {
            console.log('‚ùå NOT FOUND');
        }

        // 4. Verificar si el estudio existe
        const studioRef = firebase.firestore().doc(`studios/${studioId}`);
        const studioDoc = await studioRef.get();
        
        console.log(`üè¢ Studio exists:`);
        if (studioDoc.exists) {
            console.log('‚úÖ YES:', studioDoc.data());
        } else {
            console.log('‚ùå NO');
        }

        // 5. Intentar buscar todas las membres√≠as del usuario
        console.log('üîç Buscando TODAS las membres√≠as del usuario...');
        
        try {
            const allMembersQuery = firebase.firestore().collection('studio_members').where('userId', '==', userId);
            const allMembersSnap = await allMembersQuery.get();
            console.log(`üìã Total membres√≠as encontradas: ${allMembersSnap.size}`);
            allMembersSnap.forEach((doc) => {
                console.log(`  - ${doc.id}:`, doc.data());
            });
        } catch (error) {
            console.log('‚ùå Error buscando membres√≠as:', error);
        }

        // 6. Verificar perfil de usuario
        const userRef = firebase.firestore().doc(`users/${userId}`);
        const userDoc = await userRef.get();
        
        console.log(`üë§ User profile:`);
        if (userDoc.exists) {
            console.log('‚úÖ EXISTS:', userDoc.data());
        } else {
            console.log('‚ùå NOT FOUND');
        }

    } catch (error) {
        console.error('‚ùå Error general:', error);
    }
})();
